//box-shadow
$breakpoints: ( "phone": 400px, "phone-wide": 480px, "phablet": 560px, "tablet-small": 640px, "tablet": 768px, "tablet-wide": 1024px, "desktop": 1248px, "desktop-wide": 1440px, "desktop-large": 1700px);
@mixin box-shadow($hoff: false, $voff: false, $blur: false, $spread: false, $color: false) {
    box-shadow: $hoff $voff $blur $spread $color;
    -webkit-box-shadow: $hoff $voff $blur $spread $color;
    -moz-box-shadow: $hoff $voff $blur $spread $color;
}

//gradient
@mixin gradient($color1, $color2) {
    background-color: $color1;
    filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$color1}, endColorstr=#{$color2});
    background-image: -moz-linear-gradient(center top, $color1, $color2);
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($color1), to($color2));
}

// rotate
@mixin transform-rotate($rotate) {
    -webkit-transform: rotate($rotate);
    -moz-transform: rotate($rotate);
    -o-transform: rotate($rotate);
    transform: rotate($rotate);
}

//border-radius
@mixin border-radius($radius) {
    border-radius: $radius;
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
}

// example @include breakpoint(940) { width:80%; }
// @mixin breakpoint($size) {
//   @media only screen and (max-width: $size + px) { @content; }
// }
@mixin btn($left, $top) {
    position: fixed;
    width: 30px;
    height: 30px;
    top: $top;
    right: $left;
    transition-duration: 0.5s;
}

@mixin icon-before($height, $width, $top) {
    transition-duration: 0.5s;
    position: absolute;
    width: $width;
    height: $height;
    background-color: $black;
    content: "";
    top: $top;
}

@mixin icon-after($height, $width, $top) {
    transition-duration: 0.5s;
    position: absolute;
    width: $width;
    height: $height;
    background-color: $black;
    content: "";
    top: $top;
}

@mixin icon($height, $width) {
    transition-duration: 0.5s;
    position: absolute;
    height: $height;
    width: $width;
    top: 15px;
    background-color: $black;
}

@mixin mq($width, $type: max) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type==max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}